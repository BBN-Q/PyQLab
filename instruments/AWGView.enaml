from enaml.widgets.api import Window, Label, Field, Form, Container, GroupBox, CheckBox, ComboBox
from enaml.layout.api import hbox, vbox, spacer
from enaml.stdlib.fields import FloatField
from enaml.core.api import Looper, Include


enamldef ChannelView(GroupBox):
	attr chan
	share_layout=True
	title = chan.name
	padding = 0
	Form:
		resist_width='weak'
		padding = 2
		share_layout=True
		Label: 
			text = 'Amp.'
		FloatField:
			constraints = [width == 50]
			maximum = 1.0
			minimum = 0.0
			value := chan.amplitude
			tool_tip = chan.trait('amplitude').desc
		Label: 
			text = 'Offset'
		FloatField:
			constraints = [width == 50]
			maximum = 1.0
			minimum = -1.0
			value := chan.offset
			tool_tip = chan.trait('offset').desc
		Label:
			text = 'Enabled'
		CheckBox:
			checked := chan.enabled
			tool_tip = chan.trait('enabled').desc


enamldef AWGForm(GroupBox):
	attr awg
	padding = 5
	title = awg.name
	constraints = [vbox(hbox(formItems, spacer.flex()), channels)]
	Form: formItems:
		Label: 
			text = 'Address'
		Field: 
			text := awg.address
		Label:
			text = 'Trigger Interval'
		FloatField:
			maximum = 15
			minimum = 10e-9
			value := awg.triggerInterval
			tool_tip = awg.trait('triggerInterval').desc
		Label:
			text = "Trigger Source"
		ComboBox:
			index <<  ['Internal','External'].index(awg.triggerSource)
			index >> ['Internal','External'][index]
			items << list(awg.trait('triggerSource').handler.values)
			tool_tip = awg.trait('triggerSource').desc
	Container: channels:
		constraints = [hbox(*inc.objects)]
		Include: inc:
			objects << [ChannelView(chan=chan) for chan in awg.channels]

enamldef AWGView(Window):
	id: main
	attr awg
	title = awg.name
	Container:
		AWGForm:
			awg := main.awg



