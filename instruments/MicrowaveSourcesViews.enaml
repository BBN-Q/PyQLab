from enaml.widgets.api import Window, Label, Field, Form, Container, GroupBox, CheckBox, ComboBox, \
								PushButton, StackItem
from enaml.stdlib.fields import FloatField
from enaml.layout.api import hbox, vbox, spacer
from enaml.core.api import Conditional

import MicrowaveSources

from widgets.enum_combos import EnumComboBox

enamldef MicrowaveSourceForm(GroupBox):
	attr uwSource
	title := "{} ({})".format(uwSource.label, uwSource.__class__.__name__)
	hug_width = "strong"
	hug_height = "strong"
	padding = 5
	Form:
		padding = 2
		Label: 
			text = "Address"
		Field: 
			text := uwSource.address
			tool_tip = uwSource.get_member("address").metadata["desc"]
		Label:
			text = "Power"
		FloatField:
			maximum = 25.0
			value := uwSource.power
			tool_tip = uwSource.get_member("power").metadata["desc"]
		Label:
			text = "Frequency"
		FloatField:
			maximum = 20.0
			minimum = 0.0
			value := uwSource.frequency
			tool_tip = uwSource.get_member("frequency").metadata["desc"]
		Label:
			text = "Output"
		CheckBox:
			checked := uwSource.output
			tool_tip = uwSource.get_member("output").metadata["desc"]
		Label:
			text = "ALC"
		CheckBox:
			checked := uwSource.alc
			enabled << not modOn.checked
			tool_tip = uwSource.get_member("alc").metadata["desc"]
		Label: 
			text = "Modulation"
		CheckBox: modOn:
			checked := uwSource.mod
			tool_tip = uwSource.get_member("mod").metadata["desc"]
		Label:
			text = "Pulse Modulate"
		CheckBox:
			checked := uwSource.pulse
			tool_tip = uwSource.get_member("pulse").metadata["desc"]
		Label:
			text = "Pulse Source"
		EnumComboBox:
			obj := uwSource
			enumName = "pulseSource"
		Conditional:
			condition = hasattr(uwSource, "refSource")
			Label:
				text = "Ref. Source"
			EnumComboBox:
				obj := uwSource
				enumName = "refSource"

enamldef MicrowaveSourceView(Window): sourceWindow:
	attr uwSource
	title = uwSource.label
	Container:
		MicrowaveSourceForm:
			uwSource := sourceWindow.uwSource

enamldef EmptySourceView(Container):
	attr uwSource

MicrowaveSourceViewMap = {type(None):EmptySourceView, MicrowaveSources.MicrowaveSource:MicrowaveSourceForm}
		