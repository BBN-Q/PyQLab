from enaml.widgets.api import Window, Container, Notebook, Page, ListControl, ListItem, Stack, StackItem, PushButton
from enaml.widgets.include import Include
from enaml.layout.api import hbox, vbox, spacer
from enaml.core.api import Looper, Include

import MicrowaveSources
from MicrowaveSourcesView import MicrowaveSourceForm, AddSourceDialog
from AWGView import AWGForm

enamldef SourcesView(Container):
	id: sourceView
	attr sources
	padding = 5
	constraints = [hbox(vbox(sourceList, hbox(addSourceButton, deleteSourceButton, spacer)), sourceStack, spacer)]
	ListControl: sourceList:
		row_changed :: 
			sourceStack.index = event.new
		Looper: sourceLooper:
			iterable << [source for source in sources]
			ListItem:
				text := loop_item.name
				editable = True
				checkable = True
				checked := loop_item.enabled

	Stack: sourceStack:
		Looper:
			iterable << [source for source in sources]
			StackItem:
				MicrowaveSourceForm:
					uwSource := loop_item
	PushButton: addSourceButton:
		text = 'Add'
		clicked ::
			AddSourceDialog(root_object(), sourceList = sources)

	PushButton: deleteSourceButton:
		text = 'Delete'
		clicked ::
			sources.pop(sourceStack.index)

enamldef AWGsView(Container):
	attr AWGs
	constraints = [hbox(awgList, awgStack)]
	ListControl: awgList:
		row_changed :: 
			awgStack.index = event.new
		Looper:
			iterable << [awg for awg in AWGs]
			ListItem:
				text := loop_item.name
				editable = True
				checkable = True
				checked := loop_item.enabled
	Stack: awgStack:
		Looper:
			iterable << [awg for awg in AWGs]
			StackItem:
				AWGForm:
					awg=loop_item

enamldef InstrumentManagerView(Container):
	id: instrLibTabs
	attr instrLib
	Notebook:
		tab_style = 'preferences'
		Page:
			title = 'Sources'
			closable = False
			SourcesView:
				sources = instrLibTabs.instrLib.sources
		Page:
			title = "AWG's"
			closable = False
			AWGsView:
				AWGs = instrLibTabs.instrLib.AWGs

enamldef InstrumentManagerWindow(Window):
	id: instrLibWin
	attr instrLib
	title = 'Instrument Library'
	Container:
		InstrumentManagerView:
			instrLib = instrLibWin.instrLib


