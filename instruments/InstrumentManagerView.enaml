from enaml.widgets.api import Window, Container, Notebook, Page, ListControl, ListItem,\
							 Stack, StackItem, PushButton, GroupBox, Form, Label, Field
from enaml.layout.api import hbox, vbox, spacer
from enaml.core.api import Looper, Include

import MicrowaveSources, AWGs

from EnamlHelpers import DictManagerView, DictManager, AddDialog

from AWGsViews import AWGViewMap
from MicrowaveSourcesViews import MicrowaveSourceViewMap

from DigitizersViews import DigitizerViewMap
import Digitizers

from DCSourcesViews import DCSourcesViewMap
import DCSources

import Analysers

enamldef EmptyInstrView(Container):
	attr instr

#For standard instruments just display the name and address field
enamldef DefaultInstrView(GroupBox):
	hug_width = 'medium'
	attr instr
	title := '{} ({})'.format(instr.name, instr.__class__.__name__)
	Form:
		Label:
			text = 'Address'
		Field:
			text := instr.address

otherViewMap = {type(None):EmptyInstrView, Analysers.HP71000:DefaultInstrView, Analysers.BBNSpecAnalyser:DefaultInstrView}
otherViewMap.update(DigitizerViewMap.items())
otherViewMap.update(DCSourcesViewMap.items())

newOtherInstrs = [Digitizers.AlazarATS9870, Analysers.HP71000, Analysers.BBNSpecAnalyser, DCSources.YokoGS200]

enamldef InstrumentManagerView(Container):
	attr instrLib
	Notebook:
		tab_style = 'preferences'
		Page:
			title = 'uwSources'
			closable = False
			DictManagerView:
				myDict = instrLib.instrDict
				displayFilter = lambda x : isinstance(x, MicrowaveSources.MicrowaveSource)
				modelName = 'uwSource'
				viewMap = MicrowaveSourceViewMap
				addDialog = lambda root, itemDict : \
			AddDialog(root, itemDict=itemDict, newClassList=MicrowaveSources.MicrowaveSourceList, objText='uwSource')

		Page:
			title = "AWG's"
			closable = False
			DictManagerView:
				myDict = instrLib.instrDict
				displayFilter = lambda x : isinstance(x, AWGs.AWG)
				modelName = 'awg'
				viewMap = AWGViewMap
				addDialog = lambda root, itemDict : \
					AddDialog(root, itemDict=itemDict, newClassList=AWGs.AWGList, objText='AWG')

		Page:
			title = "Other"
			closable = False
			DictManagerView:
				myDict = instrLib.instrDict
				displayFilter = lambda x : not isinstance(x, AWGs.AWG) and not isinstance(x, MicrowaveSources.MicrowaveSource)
				modelName = 'instr'
				viewMap = otherViewMap
				addDialog = lambda root, itemDict : \
					AddDialog(root, itemDict=itemDict, newClassList=newOtherInstrs, objText='Instr')

enamldef InstrumentManagerWindow(Window):
	id: instrLibWin
	attr instrLib
	title = 'Instrument Library'
	Container:
		InstrumentManagerView:
			instrLib = instrLibWin.instrLib


