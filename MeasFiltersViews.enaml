from enaml.widgets.api import Window, Label, Field, Form, Container, GroupBox, ComboBox, \
	CheckBox, PushButton, SpinBox, StackItem
from enaml.stdlib.fields import FloatField, IntField
from enaml.core.api import Conditional
from enaml.layout.api import hbox, vbox, spacer


from EnamlHelpers import DictManagerView, DictManager, AddDialog

import MeasFilters

from numpy import pi

enamldef DigitalHomodyneForm(GroupBox):
	attr myFilter
	title := myFilter.name
	hug_width = 'medium'
	Form:
		Label:
			text = 'Box Car Start'
		IntField:
			value := myFilter.boxCarStart
			tool_tip = myFilter.trait('boxCarStart').desc
		Label:
			text = 'Box Car Stop'
		IntField:
			value := myFilter.boxCarStop
			tool_tip = myFilter.trait('boxCarStop').desc
		Label:
			text = 'I.F. Freq (M)'
		FloatField:
			value << myFilter.IFfreq/1e6
			value :: myFilter.IFfreq = value*1e6
			tool_tip = myFilter.trait('IFfreq').desc
		Label:
			text = 'Sampling Rate (M)'
		FloatField:
			value << myFilter.samplingRate/1e6
			value :: myFilter.samplingRate = value*1e6
			tool_tip = myFilter.trait('samplingRate').desc
		Label:
			text = "Phase (deg.)"
		FloatField:
			value << (180/pi)*myFilter.phase
			value :: myFilter.phase = (pi/180)*value
		Label:
			text = "Source Channel"
		SpinBox:
			minimum = 1
			maximum = 2
			value := myFilter.channel
		Label: 
			text = "Plot scope"
		CheckBox:
			checked := myFilter.plotScope

enamldef MeasFilterWindow(Window):
	id: filterTest
	attr myFilter
	DigitalHomodyneForm:
		myFilter := filterTest.myFilter

#Dummy empty view
enamldef EmptyMeasFilterForm(Container):
	attr myFilter

#Map filters to views
filterViewMap = {type(None):EmptyMeasFilterForm, MeasFilters.DigitalHomodyne:DigitalHomodyneForm}

enamldef MeasFilterManager(Container):
	id: measFilterManager
	attr filterLib
	DictManagerView:
		myDict = filterLib.filterDict
		modelName = 'myFilter'
		viewMap = filterViewMap
		addDialog = lambda root, filterDict=filterLib.filterDict, filterList=filterLib.filterList : \
			AddDialog(root, itemDict=filterDict, newClassList=filterList, objText='Filter')

enamldef MeasFilterManagerWindow(Window):
	id: measFilterManagerTest
	attr filterLib
	title = 'Filter Manager'
	MeasFilterManager:
		filterLib := measFilterManagerTest.filterLib
