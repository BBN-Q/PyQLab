from enaml.widgets.api import Window, Label, Field, Form, Container, GroupBox, ComboBox, \
	PushButton, ListControl, ListItem, Stack, StackItem
from enaml.stdlib.fields import FloatField
from enaml.core.api import Conditional
from enaml.layout.api import hbox, vbox, spacer

from EnamlHelpers import DictManagerView, DictManager, AddDialog

from Sweeps import PointsSweep

enamldef PointsSweepForm(GroupBox):
	attr sweep
	attr possibleInstrs
	title = '{} ({})'.format(sweep.name, sweep.label)
	Form:
		Label:
			text = 'Start'
		FloatField:
			value := sweep.start
		Label:
			text = 'Stop'
		FloatField:
			value := sweep.stop
		Label:
			text = 'Step'
		FloatField:
			value := sweep.step
		ComboBox:
			index << possibleInstrs.index(sweep.instr) if (possibleInstrs and sweep.instr) else 0
			index :: sweep.instr = possibleInstrs[index]
			items << [instr.name for instr in possibleInstrs]


#Stack view with one of many possible view conditionally displayed
enamldef SweepStackView(StackItem):
	id: sweepskv
	attr mySweep
	attr possibleInstrs
	Conditional:
		condition = isinstance(mySweep, PointsSweep)
		PointsSweepForm:
			sweep := sweepskv.mySweep
			possibleInstrs = sweepskv.possibleInstrs

enamldef SweepManager(Container):
	id: sweepManager
	attr sweepLib
	DictManagerView:
		myDict = sweepLib.sweepDict
		addDialog = lambda root, itemDict, sweepLib=sweepLib : \
			AddDialog(root, itemDict=itemDict, newClassList=sweepLib.newSweepClasses, objText='Sweep', kwargs={'possibleInstrs':sweepLib.possibleInstrs})

enamldef SweepManagerWindow(Window):
	id: sweepManagerTest
	attr sweepLib
	title = 'Sweep Manager'
	SweepManager:
		sweepLib := sweepManagerTest.sweepLib
